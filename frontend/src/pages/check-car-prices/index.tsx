import Head from "next/head";
import { Navbar } from "../../components/Navbar";
import { useState } from "react";
import Dropdown from "@/components/Dropdown";
import { Footer } from "@/components/Footer";
import {
  bodyTypeData,
  brandData,
  colorData,
  locationData,
  modelData,
  transmissionData,
} from "@/data/checkCarPrice";
import { isFormComplete } from "@/utils/formUtils";

const CheckCarPrice = () => {
  const [brand, setBrand] = useState("Select option");
  const [model, setModel] = useState("Select option");
  const [age_of_car, setAgeOfCar] = useState("Select option");
  const [body_type, setBodyType] = useState("Select option");
  const [color, setColor] = useState("Select option");
  const [location, setLocation] = useState("Select option");
  const [retail, setRetailPrice] = useState("Select option");
  const [poster_type, setPosterType] = useState("Select option");
  const [fuel_type, setFuelType] = useState("Select option");
  const [transmission, setTransmission] = useState("Select option");
  const [mileage_in_km, setMileage] = useState("Select option");
  const [estimatedPrice, setEstimatedPrice] = useState<number | null>(null);

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

     const formComplete = isFormComplete(
      brand,
      model,
      transmission,
      color,
      body_type,
      poster_type,
      fuel_type,
      location,
      retail,  
      age_of_car,
      mileage_in_km
    );

    if (!formComplete) {
      console.log("Please complete all selections before submitting.");
      return;
    }

    try {
      const response = await fetch('/api/predictPrice', {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          brand,
          model,
          transmission,
          color,
          body_type,
          poster_type,
          fuel_type,
          location,
          retail: parseFloat(retail),   
          age_of_car: parseFloat(age_of_car),
          mileage_in_km: parseFloat(mileage_in_km),
        }),
      });

      if (!response.ok) {
        throw new Error("Failed to fetch data");
      }

      const data = await response.json();
      console.log("Fetched data:", data);

      setEstimatedPrice(data.price);
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  return (
    <>
      <Head>
        <title> Check Car Price | RKS </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/rks-logo.png" />
      </Head>

      <Navbar />

      <div
        className="bg-contain min-h-screen flex justify-center items-center pb-12"
        style={{
          backgroundImage: "url('hero-bg.png')",
          backgroundSize: "100% 100%",
        }}
      >
        <form onSubmit={handleSubmit}>
          <div className="max-w-[1350px]">
            <div className="text-white pt-24 flex-col text-center">
              <div className="md:text-4xl text-2xl sm:text-3xl font-semibold uppercase">
                Calculate the
                <span className="text-[#FF7A00] mr-2"> value</span>
                of your car
              </div>

              <div className="bg-white w-[1200px] h-[800px] rounded-sm shadow mt-8 ">
                <div className="text-left text-3xl mx-10 pt-10 underline text-[#FF7A00]">
                  Car Details
                </div>

                <div className="flex items-center justify-center ">
                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Brand
                    <Dropdown
                      width="80"
                      label={brand}
                      options={brandData}
                      onSelect={setBrand}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Model
                    <Dropdown
                      width="80"
                      label={model}
                      options={modelData[brand] || []}
                      onSelect={setModel}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-4 text-left mx-10 font-medium text-gray-800">
                    <p> Age of Car </p>
                    <input
                      type="number"
                      min={1}
                      max={100}
                      name="ageOfCar"
                      placeholder="Enter the age of your car"
                      className="border border-gray-800 px-2 w-80 py-1 text-gray-800"
                      value={age_of_car}
                      onChange={(e) => setAgeOfCar(e.target.value)}
                    />
                  </div>
                </div>

                <div className="flex items-center justify-center ">
                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Body Type
                    <Dropdown
                      width="80"
                      label={body_type}
                      options={bodyTypeData}
                      onSelect={setBodyType}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Color
                    <Dropdown
                      width="80"
                      label={color}
                      options={colorData}
                      onSelect={setColor}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Location
                    <Dropdown
                      width="80"
                      label={location}
                      options={locationData}
                      onSelect={setLocation}
                      optionWidth="80"
                    />
                  </div>
                </div>

                <div className="flex items-center justify-center ">
                  <div className="flex-col pt-4 text-left mx-10 font-medium text-gray-800">
                    <p> Retail Price </p>
                    <input
                      type="number"
                      name="retailPrice"
                      placeholder="Enter a number"
                      className="border border-gray-800 px-2 w-80 py-1 text-gray-800"
                      value={retail}
                      onChange={(e) => setRetailPrice(e.target.value)}
                    />
                  </div>

                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Poster Type
                    <Dropdown
                      width="80"
                      label={poster_type}
                      options={["Individual", "Dealer"]}
                      onSelect={setPosterType}
                      optionWidth="80"
                    />
                  </div>
                </div>

                <div className="text-left text-3xl mx-10 pt-10 underline text-[#FF7A00]">
                  Engine Details
                </div>

                <div className="flex items-center justify-center ">
                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Fuel Type
                    <Dropdown
                      width="80"
                      label={fuel_type}
                      options={[
                        "Gasoline",
                        "Diesel",
                        "Electric",
                        "No Fuel Type",
                      ]}
                      onSelect={setFuelType}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-6 text-left mx-10 font-medium text-gray-800">
                    Transmission
                    <Dropdown
                      width="80"
                      label={transmission}
                      options={transmissionData}
                      onSelect={setTransmission}
                      optionWidth="80"
                    />
                  </div>

                  <div className="flex-col pt-2 text-left mx-10 font-medium text-gray-800">
                    <div> Mileage </div>
                    <input
                      type="number"
                      name="mileage"
                      placeholder="Enter the mileage in km"
                      className="border border-gray-800 px-2 w-80 py-1 text-gray-800"
                      value={mileage_in_km}
                      onChange={(e) => setMileage(e.target.value)}
                    />
                  </div>
                </div>

                <div className="text-left text-3xl mx-10 pt-10 underline text-[#FF7A00]">
                  Predicted Car Price
                </div>

                <div className="flex items-center">
                  <div className="rounded-lg bg-gray-100 border border-gray-200 w-[600px] h-28 mt-6 ml-10 text-left">
                    <div className="text-gray-500 mt-2 ml-2 uppercase">
                      Estimated Value:
                    </div>
                    <div className="text-5xl ml-4 mt-2 text-black font-bold">
                    â‚±{estimatedPrice?.toLocaleString()}
                    </div>
                  </div>

                  <button
                    type="submit"
                    className="cursor-pointer hover:bg-[rgb(255,106,0)] mt-5 items-center rounded-lg h-12 w-40 bg-[#FF7A00] text-white ml-10 font-semibold"
                  >
                    ESTIMATE
                  </button>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>

      <Footer />
    </>
  );
};

export default CheckCarPrice;
